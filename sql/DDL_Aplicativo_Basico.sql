CREATE TABLE  "PAGINA" 
   (	"PAGINA_ID" NUMBER NOT NULL ENABLE, 
	"NOME" VARCHAR2(100) NOT NULL ENABLE, 
	 CONSTRAINT "PAGINA_PK" PRIMARY KEY ("PAGINA_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "GRUPO" 
   (	"GRUPO_ID" NUMBER NOT NULL ENABLE, 
	"NOME" VARCHAR2(100) NOT NULL ENABLE, 
	 CONSTRAINT "GRUPO_PK" PRIMARY KEY ("GRUPO_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "GRUPO_PAGINA" 
   (	"GRUPO_ID" NUMBER NOT NULL ENABLE, 
	"PAGINA_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "GRUPO_PAGINA_PK" PRIMARY KEY ("GRUPO_ID", "PAGINA_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "MENU" 
   (	"MENU_ID" NUMBER NOT NULL ENABLE, 
	"PARENT_ID" NUMBER, 
	"PAGINA_ID" NUMBER, 
	"LABEL" VARCHAR2(30) NOT NULL ENABLE, 
	"ORDEM" NUMBER NOT NULL ENABLE, 
	"IMAGE_REF" VARCHAR2(255), 
	"IMAGE_ATTRIB" VARCHAR2(1000), 
	"IMAGE_ALT" VARCHAR2(1000), 
	"PARAM_NAME" VARCHAR2(1000), 
	"PARAM_VALUE" VARCHAR2(1000), 
	 CONSTRAINT "MENU_PK" PRIMARY KEY ("MENU_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "USUARIO" 
   (	"USUARIO_ID" NUMBER NOT NULL ENABLE, 
	"NOME" VARCHAR2(100) NOT NULL ENABLE, 
	"SENHA" VARCHAR2(100) NOT NULL ENABLE, 
	 CONSTRAINT "USUARIO_PK" PRIMARY KEY ("USUARIO_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "USUARIO_GRUPO" 
   (	"USUARIO_ID" NUMBER NOT NULL ENABLE, 
	"GRUPO_ID" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "USUARIO_GRUPO_PK" PRIMARY KEY ("USUARIO_ID", "GRUPO_ID")
  USING INDEX  ENABLE
   )
/
CREATE TABLE  "HTMLDB_PLAN_TABLE" 
   (	"STATEMENT_ID" VARCHAR2(30), 
	"PLAN_ID" NUMBER, 
	"TIMESTAMP" DATE, 
	"REMARKS" VARCHAR2(4000), 
	"OPERATION" VARCHAR2(30), 
	"OPTIONS" VARCHAR2(255), 
	"OBJECT_NODE" VARCHAR2(128), 
	"OBJECT_OWNER" VARCHAR2(128), 
	"OBJECT_NAME" VARCHAR2(128), 
	"OBJECT_ALIAS" VARCHAR2(261), 
	"OBJECT_INSTANCE" NUMBER(*,0), 
	"OBJECT_TYPE" VARCHAR2(128), 
	"OPTIMIZER" VARCHAR2(255), 
	"SEARCH_COLUMNS" NUMBER, 
	"ID" NUMBER(*,0), 
	"PARENT_ID" NUMBER(*,0), 
	"DEPTH" NUMBER(*,0), 
	"POSITION" NUMBER(*,0), 
	"COST" NUMBER(*,0), 
	"CARDINALITY" NUMBER(*,0), 
	"BYTES" NUMBER(*,0), 
	"OTHER_TAG" VARCHAR2(255), 
	"PARTITION_START" VARCHAR2(255), 
	"PARTITION_STOP" VARCHAR2(255), 
	"PARTITION_ID" NUMBER(*,0), 
	"OTHER" LONG, 
	"DISTRIBUTION" VARCHAR2(30), 
	"CPU_COST" NUMBER(*,0), 
	"IO_COST" NUMBER(*,0), 
	"TEMP_SPACE" NUMBER(*,0), 
	"ACCESS_PREDICATES" VARCHAR2(4000), 
	"FILTER_PREDICATES" VARCHAR2(4000), 
	"PROJECTION" VARCHAR2(4000), 
	"TIME" NUMBER(*,0), 
	"QBLOCK_NAME" VARCHAR2(128)
   )
/
ALTER TABLE  "GRUPO_PAGINA" ADD CONSTRAINT "GRUPO_PAGINA_CON_GRUPO_FK" FOREIGN KEY ("GRUPO_ID")
	  REFERENCES  "GRUPO" ("GRUPO_ID") ENABLE
/
ALTER TABLE  "GRUPO_PAGINA" ADD CONSTRAINT "GRUPO_PAGINA_CON_PAGINA_FK" FOREIGN KEY ("PAGINA_ID")
	  REFERENCES  "PAGINA" ("PAGINA_ID") ENABLE
/
ALTER TABLE  "MENU" ADD CONSTRAINT "MENU_CON_PAGINA_FK" FOREIGN KEY ("PAGINA_ID")
	  REFERENCES  "PAGINA" ("PAGINA_ID") ENABLE
/
ALTER TABLE  "USUARIO_GRUPO" ADD CONSTRAINT "USUARIO_GRUPO_CON_GRUPO_FK" FOREIGN KEY ("GRUPO_ID")
	  REFERENCES  "GRUPO" ("GRUPO_ID") ENABLE
/
ALTER TABLE  "USUARIO_GRUPO" ADD CONSTRAINT "USUARIO_GRUPO_CON_USUARIO_FK" FOREIGN KEY ("USUARIO_ID")
	  REFERENCES  "USUARIO" ("USUARIO_ID") ENABLE
/
CREATE UNIQUE INDEX  "GRUPO_PAGINA_PK" ON  "GRUPO_PAGINA" ("GRUPO_ID", "PAGINA_ID")
/
CREATE UNIQUE INDEX  "GRUPO_PK" ON  "GRUPO" ("GRUPO_ID")
/
CREATE UNIQUE INDEX  "MENU_PK" ON  "MENU" ("MENU_ID")
/
CREATE UNIQUE INDEX  "PAGINA_PK" ON  "PAGINA" ("PAGINA_ID")
/
CREATE UNIQUE INDEX  "USUARIO_GRUPO_PK" ON  "USUARIO_GRUPO" ("USUARIO_ID", "GRUPO_ID")
/
CREATE UNIQUE INDEX  "USUARIO_PK" ON  "USUARIO" ("USUARIO_ID")
/
CREATE OR REPLACE EDITIONABLE PACKAGE  "PKG_AUTH_SCHEMES" 
AS
  FUNCTION autenticar_usuario (p_username IN VARCHAR2, p_password IN VARCHAR2) RETURN BOOLEAN;
  FUNCTION permitir_acesso    (p_username IN VARCHAR2, p_page_id  IN NUMBER)   RETURN BOOLEAN;
END;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY  "PKG_AUTH_SCHEMES" 
AS
  FUNCTION autenticar_usuario (p_username IN VARCHAR2, p_password IN VARCHAR2)
  RETURN BOOLEAN
  IS
    CURSOR c_usuario
    IS
    SELECT usuario_id
      FROM usuario
     WHERE upper (nome) = upper (p_username)
       AND senha        = p_password;
    l_usuario_id usuario.usuario_id%TYPE;
    l_found      BOOLEAN;
  BEGIN
    OPEN c_usuario;
    FETCH c_usuario INTO l_usuario_id;
    l_found := c_usuario%FOUND;
    CLOSE c_usuario;
    RETURN l_found;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN false;
  END autenticar_usuario;
  FUNCTION permitir_acesso (p_username IN VARCHAR2, p_page_id IN NUMBER)
  RETURN BOOLEAN
  IS
    CURSOR c_acesso
    IS
    SELECT u.usuario_id
      FROM usuario       u
         , usuario_grupo ug
         , grupo_pagina  gp
     WHERE upper (u.nome) = upper (p_username)
       AND u.usuario_id   = ug.usuario_id
       AND ug.grupo_id    = gp.grupo_id
       AND gp.pagina_id   = p_page_id;
    l_usuario_id usuario.usuario_id%TYPE;
    l_found      BOOLEAN;
  BEGIN
    OPEN c_acesso;
    FETCH c_acesso INTO l_usuario_id;
    l_found := c_acesso%FOUND;
    CLOSE c_acesso;
    RETURN l_found;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN false;
  END permitir_acesso;
END pkg_auth_schemes;
/

 CREATE SEQUENCE   "GRUPO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "MENU_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "PAGINA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
 CREATE SEQUENCE   "USUARIO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_GRUPO" 
  before insert on grupo               
  for each row  
begin
  if :NEW."GRUPO_ID" is null then
    select "GRUPO_SEQ".nextval into :NEW."GRUPO_ID" from sys.dual;
  end if;
end;

/
ALTER TRIGGER  "BI_GRUPO" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_MENU" 
  before insert on menu               
  for each row  
begin
  if :NEW."MENU_ID" is null then
    select "MENU_SEQ".nextval into :NEW."MENU_ID" from sys.dual;
  end if;
end;

/
ALTER TRIGGER  "BI_MENU" ENABLE
/
CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_USUARIO" 
  before insert on usuario               
  for each row  
begin
  if :NEW."USUARIO_ID" is null then
    select "USUARIO_SEQ".nextval into :NEW."USUARIO_ID" from sys.dual;
  end if;
end;

/
ALTER TRIGGER  "BI_USUARIO" ENABLE
/
